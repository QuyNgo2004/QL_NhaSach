#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLNS_DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLNhaSach")]
	public partial class QLNhaSachDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiNhanh(ChiNhanh instance);
    partial void UpdateChiNhanh(ChiNhanh instance);
    partial void DeleteChiNhanh(ChiNhanh instance);
    partial void InsertCTHoaDon(CTHoaDon instance);
    partial void UpdateCTHoaDon(CTHoaDon instance);
    partial void DeleteCTHoaDon(CTHoaDon instance);
    partial void InsertCTKhuyenMai(CTKhuyenMai instance);
    partial void UpdateCTKhuyenMai(CTKhuyenMai instance);
    partial void DeleteCTKhuyenMai(CTKhuyenMai instance);
    partial void InsertDanhMuc(DanhMuc instance);
    partial void UpdateDanhMuc(DanhMuc instance);
    partial void DeleteDanhMuc(DanhMuc instance);
    partial void InsertDonVi(DonVi instance);
    partial void UpdateDonVi(DonVi instance);
    partial void DeleteDonVi(DonVi instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertKhuyenMai(KhuyenMai instance);
    partial void UpdateKhuyenMai(KhuyenMai instance);
    partial void DeleteKhuyenMai(KhuyenMai instance);
    partial void InsertNhaCC(NhaCC instance);
    partial void UpdateNhaCC(NhaCC instance);
    partial void DeleteNhaCC(NhaCC instance);
    partial void InsertNhaCCCT(NhaCCCT instance);
    partial void UpdateNhaCCCT(NhaCCCT instance);
    partial void DeleteNhaCCCT(NhaCCCT instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertTheLoai(TheLoai instance);
    partial void UpdateTheLoai(TheLoai instance);
    partial void DeleteTheLoai(TheLoai instance);
    #endregion
		
		public QLNhaSachDataContext() : 
				base(global::QLNS_DAL.Properties.Settings.Default.QLNhaSachConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLNhaSachDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNhaSachDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNhaSachDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNhaSachDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiNhanh> ChiNhanhs
		{
			get
			{
				return this.GetTable<ChiNhanh>();
			}
		}
		
		public System.Data.Linq.Table<CTHoaDon> CTHoaDons
		{
			get
			{
				return this.GetTable<CTHoaDon>();
			}
		}
		
		public System.Data.Linq.Table<CTKhuyenMai> CTKhuyenMais
		{
			get
			{
				return this.GetTable<CTKhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc> DanhMucs
		{
			get
			{
				return this.GetTable<DanhMuc>();
			}
		}
		
		public System.Data.Linq.Table<DonVi> DonVis
		{
			get
			{
				return this.GetTable<DonVi>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai> KhuyenMais
		{
			get
			{
				return this.GetTable<KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<NhaCC> NhaCCs
		{
			get
			{
				return this.GetTable<NhaCC>();
			}
		}
		
		public System.Data.Linq.Table<NhaCCCT> NhaCCCTs
		{
			get
			{
				return this.GetTable<NhaCCCT>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<TheLoai> TheLoais
		{
			get
			{
				return this.GetTable<TheLoai>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiNhanh")]
	public partial class ChiNhanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maCN;
		
		private string _tenCN;
		
		private string _diaChi;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaCNChanging(string value);
    partial void OnmaCNChanged();
    partial void OntenCNChanging(string value);
    partial void OntenCNChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    #endregion
		
		public ChiNhanh()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maCN", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maCN
		{
			get
			{
				return this._maCN;
			}
			set
			{
				if ((this._maCN != value))
				{
					this.OnmaCNChanging(value);
					this.SendPropertyChanging();
					this._maCN = value;
					this.SendPropertyChanged("maCN");
					this.OnmaCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenCN", DbType="NVarChar(50)")]
		public string tenCN
		{
			get
			{
				return this._tenCN;
			}
			set
			{
				if ((this._tenCN != value))
				{
					this.OntenCNChanging(value);
					this.SendPropertyChanging();
					this._tenCN = value;
					this.SendPropertyChanged("tenCN");
					this.OntenCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(100)")]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiNhanh_NhanVien", Storage="_NhanViens", ThisKey="maCN", OtherKey="maCN")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChiNhanh = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChiNhanh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHoaDon")]
	public partial class CTHoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maHD;
		
		private int _maSP;
		
		private System.Nullable<int> _SL;
		
		private System.Nullable<double> _TTien;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHDChanging(int value);
    partial void OnmaHDChanged();
    partial void OnmaSPChanging(int value);
    partial void OnmaSPChanged();
    partial void OnSLChanging(System.Nullable<int> value);
    partial void OnSLChanged();
    partial void OnTTienChanging(System.Nullable<double> value);
    partial void OnTTienChanged();
    #endregion
		
		public CTHoaDon()
		{
			this._HoaDon = default(EntityRef<HoaDon>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maHD
		{
			get
			{
				return this._maHD;
			}
			set
			{
				if ((this._maHD != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHDChanging(value);
					this.SendPropertyChanging();
					this._maHD = value;
					this.SendPropertyChanged("maHD");
					this.OnmaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maSP
		{
			get
			{
				return this._maSP;
			}
			set
			{
				if ((this._maSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaSPChanging(value);
					this.SendPropertyChanging();
					this._maSP = value;
					this.SendPropertyChanged("maSP");
					this.OnmaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL", DbType="Int")]
		public System.Nullable<int> SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this.OnSLChanging(value);
					this.SendPropertyChanging();
					this._SL = value;
					this.SendPropertyChanged("SL");
					this.OnSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTien", DbType="Float")]
		public System.Nullable<double> TTien
		{
			get
			{
				return this._TTien;
			}
			set
			{
				if ((this._TTien != value))
				{
					this.OnTTienChanging(value);
					this.SendPropertyChanging();
					this._TTien = value;
					this.SendPropertyChanged("TTien");
					this.OnTTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_CTHoaDon", Storage="_HoaDon", ThisKey="maHD", OtherKey="maHD", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.CTHoaDons.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.CTHoaDons.Add(this);
						this._maHD = value.maHD;
					}
					else
					{
						this._maHD = default(int);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTHoaDon", Storage="_SanPham", ThisKey="maSP", OtherKey="maSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.CTHoaDons.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.CTHoaDons.Add(this);
						this._maSP = value.maSP;
					}
					else
					{
						this._maSP = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTKhuyenMai")]
	public partial class CTKhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maSP;
		
		private string _maKM;
		
		private System.Nullable<System.DateTime> _ngayBD;
		
		private System.Nullable<System.DateTime> _ngayKT;
		
		private EntityRef<KhuyenMai> _KhuyenMai;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaSPChanging(int value);
    partial void OnmaSPChanged();
    partial void OnmaKMChanging(string value);
    partial void OnmaKMChanged();
    partial void OnngayBDChanging(System.Nullable<System.DateTime> value);
    partial void OnngayBDChanged();
    partial void OnngayKTChanging(System.Nullable<System.DateTime> value);
    partial void OnngayKTChanged();
    #endregion
		
		public CTKhuyenMai()
		{
			this._KhuyenMai = default(EntityRef<KhuyenMai>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maSP
		{
			get
			{
				return this._maSP;
			}
			set
			{
				if ((this._maSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaSPChanging(value);
					this.SendPropertyChanging();
					this._maSP = value;
					this.SendPropertyChanged("maSP");
					this.OnmaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKM", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maKM
		{
			get
			{
				return this._maKM;
			}
			set
			{
				if ((this._maKM != value))
				{
					if (this._KhuyenMai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKMChanging(value);
					this.SendPropertyChanging();
					this._maKM = value;
					this.SendPropertyChanged("maKM");
					this.OnmaKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayBD", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngayBD
		{
			get
			{
				return this._ngayBD;
			}
			set
			{
				if ((this._ngayBD != value))
				{
					this.OnngayBDChanging(value);
					this.SendPropertyChanging();
					this._ngayBD = value;
					this.SendPropertyChanged("ngayBD");
					this.OnngayBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayKT", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngayKT
		{
			get
			{
				return this._ngayKT;
			}
			set
			{
				if ((this._ngayKT != value))
				{
					this.OnngayKTChanging(value);
					this.SendPropertyChanging();
					this._ngayKT = value;
					this.SendPropertyChanged("ngayKT");
					this.OnngayKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_CTKhuyenMai", Storage="_KhuyenMai", ThisKey="maKM", OtherKey="maKM", IsForeignKey=true)]
		public KhuyenMai KhuyenMai
		{
			get
			{
				return this._KhuyenMai.Entity;
			}
			set
			{
				KhuyenMai previousValue = this._KhuyenMai.Entity;
				if (((previousValue != value) 
							|| (this._KhuyenMai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhuyenMai.Entity = null;
						previousValue.CTKhuyenMais.Remove(this);
					}
					this._KhuyenMai.Entity = value;
					if ((value != null))
					{
						value.CTKhuyenMais.Add(this);
						this._maKM = value.maKM;
					}
					else
					{
						this._maKM = default(string);
					}
					this.SendPropertyChanged("KhuyenMai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTKhuyenMai", Storage="_SanPham", ThisKey="maSP", OtherKey="maSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.CTKhuyenMais.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.CTKhuyenMais.Add(this);
						this._maSP = value.maSP;
					}
					else
					{
						this._maSP = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc")]
	public partial class DanhMuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maDM;
		
		private string _tenDM;
		
		private string _ghiChu;
		
		private EntitySet<DonVi> _DonVis;
		
		private EntitySet<TheLoai> _TheLoais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDMChanging(string value);
    partial void OnmaDMChanged();
    partial void OntenDMChanging(string value);
    partial void OntenDMChanged();
    partial void OnghiChuChanging(string value);
    partial void OnghiChuChanged();
    #endregion
		
		public DanhMuc()
		{
			this._DonVis = new EntitySet<DonVi>(new Action<DonVi>(this.attach_DonVis), new Action<DonVi>(this.detach_DonVis));
			this._TheLoais = new EntitySet<TheLoai>(new Action<TheLoai>(this.attach_TheLoais), new Action<TheLoai>(this.detach_TheLoais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDM", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maDM
		{
			get
			{
				return this._maDM;
			}
			set
			{
				if ((this._maDM != value))
				{
					this.OnmaDMChanging(value);
					this.SendPropertyChanging();
					this._maDM = value;
					this.SendPropertyChanged("maDM");
					this.OnmaDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenDM", DbType="NVarChar(50)")]
		public string tenDM
		{
			get
			{
				return this._tenDM;
			}
			set
			{
				if ((this._tenDM != value))
				{
					this.OntenDMChanging(value);
					this.SendPropertyChanging();
					this._tenDM = value;
					this.SendPropertyChanged("tenDM");
					this.OntenDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ghiChu", DbType="NVarChar(200)")]
		public string ghiChu
		{
			get
			{
				return this._ghiChu;
			}
			set
			{
				if ((this._ghiChu != value))
				{
					this.OnghiChuChanging(value);
					this.SendPropertyChanging();
					this._ghiChu = value;
					this.SendPropertyChanged("ghiChu");
					this.OnghiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_DonVi", Storage="_DonVis", ThisKey="maDM", OtherKey="maDM")]
		public EntitySet<DonVi> DonVis
		{
			get
			{
				return this._DonVis;
			}
			set
			{
				this._DonVis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_TheLoai", Storage="_TheLoais", ThisKey="maDM", OtherKey="maDM")]
		public EntitySet<TheLoai> TheLoais
		{
			get
			{
				return this._TheLoais;
			}
			set
			{
				this._TheLoais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonVis(DonVi entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = this;
		}
		
		private void detach_DonVis(DonVi entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = null;
		}
		
		private void attach_TheLoais(TheLoai entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = this;
		}
		
		private void detach_TheLoais(TheLoai entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonVi")]
	public partial class DonVi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDV;
		
		private string _maDM;
		
		private string _donVi1;
		
		private string _ghiChu;
		
		private EntitySet<SanPham> _SanPhams;
		
		private EntityRef<DanhMuc> _DanhMuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDVChanging(int value);
    partial void OnmaDVChanged();
    partial void OnmaDMChanging(string value);
    partial void OnmaDMChanged();
    partial void OndonVi1Changing(string value);
    partial void OndonVi1Changed();
    partial void OnghiChuChanging(string value);
    partial void OnghiChuChanged();
    #endregion
		
		public DonVi()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			this._DanhMuc = default(EntityRef<DanhMuc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maDV
		{
			get
			{
				return this._maDV;
			}
			set
			{
				if ((this._maDV != value))
				{
					this.OnmaDVChanging(value);
					this.SendPropertyChanging();
					this._maDV = value;
					this.SendPropertyChanged("maDV");
					this.OnmaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDM", DbType="VarChar(10)")]
		public string maDM
		{
			get
			{
				return this._maDM;
			}
			set
			{
				if ((this._maDM != value))
				{
					if (this._DanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDMChanging(value);
					this.SendPropertyChanging();
					this._maDM = value;
					this.SendPropertyChanged("maDM");
					this.OnmaDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="donVi", Storage="_donVi1", DbType="NVarChar(50)")]
		public string donVi1
		{
			get
			{
				return this._donVi1;
			}
			set
			{
				if ((this._donVi1 != value))
				{
					this.OndonVi1Changing(value);
					this.SendPropertyChanging();
					this._donVi1 = value;
					this.SendPropertyChanged("donVi1");
					this.OndonVi1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ghiChu", DbType="NVarChar(200)")]
		public string ghiChu
		{
			get
			{
				return this._ghiChu;
			}
			set
			{
				if ((this._ghiChu != value))
				{
					this.OnghiChuChanging(value);
					this.SendPropertyChanging();
					this._ghiChu = value;
					this.SendPropertyChanged("ghiChu");
					this.OnghiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonVi_SanPham", Storage="_SanPhams", ThisKey="maDV", OtherKey="maDV")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_DonVi", Storage="_DanhMuc", ThisKey="maDM", OtherKey="maDM", IsForeignKey=true)]
		public DanhMuc DanhMuc
		{
			get
			{
				return this._DanhMuc.Entity;
			}
			set
			{
				DanhMuc previousValue = this._DanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc.Entity = null;
						previousValue.DonVis.Remove(this);
					}
					this._DanhMuc.Entity = value;
					if ((value != null))
					{
						value.DonVis.Add(this);
						this._maDM = value.maDM;
					}
					else
					{
						this._maDM = default(string);
					}
					this.SendPropertyChanged("DanhMuc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DonVi = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DonVi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maHD;
		
		private string _maKH;
		
		private string _maNV;
		
		private System.Nullable<System.DateTime> _ngayHD;
		
		private System.Nullable<double> _tongHD;
		
		private EntitySet<CTHoaDon> _CTHoaDons;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHDChanging(int value);
    partial void OnmaHDChanged();
    partial void OnmaKHChanging(string value);
    partial void OnmaKHChanged();
    partial void OnmaNVChanging(string value);
    partial void OnmaNVChanged();
    partial void OnngayHDChanging(System.Nullable<System.DateTime> value);
    partial void OnngayHDChanged();
    partial void OntongHDChanging(System.Nullable<double> value);
    partial void OntongHDChanged();
    #endregion
		
		public HoaDon()
		{
			this._CTHoaDons = new EntitySet<CTHoaDon>(new Action<CTHoaDon>(this.attach_CTHoaDons), new Action<CTHoaDon>(this.detach_CTHoaDons));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maHD
		{
			get
			{
				return this._maHD;
			}
			set
			{
				if ((this._maHD != value))
				{
					this.OnmaHDChanging(value);
					this.SendPropertyChanging();
					this._maHD = value;
					this.SendPropertyChanged("maHD");
					this.OnmaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKH", DbType="VarChar(20)")]
		public string maKH
		{
			get
			{
				return this._maKH;
			}
			set
			{
				if ((this._maKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKHChanging(value);
					this.SendPropertyChanging();
					this._maKH = value;
					this.SendPropertyChanged("maKH");
					this.OnmaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNV", DbType="Char(15)")]
		public string maNV
		{
			get
			{
				return this._maNV;
			}
			set
			{
				if ((this._maNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNVChanging(value);
					this.SendPropertyChanging();
					this._maNV = value;
					this.SendPropertyChanged("maNV");
					this.OnmaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayHD", DbType="Date")]
		public System.Nullable<System.DateTime> ngayHD
		{
			get
			{
				return this._ngayHD;
			}
			set
			{
				if ((this._ngayHD != value))
				{
					this.OnngayHDChanging(value);
					this.SendPropertyChanging();
					this._ngayHD = value;
					this.SendPropertyChanged("ngayHD");
					this.OnngayHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongHD", DbType="Float")]
		public System.Nullable<double> tongHD
		{
			get
			{
				return this._tongHD;
			}
			set
			{
				if ((this._tongHD != value))
				{
					this.OntongHDChanging(value);
					this.SendPropertyChanging();
					this._tongHD = value;
					this.SendPropertyChanged("tongHD");
					this.OntongHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_CTHoaDon", Storage="_CTHoaDons", ThisKey="maHD", OtherKey="maHD")]
		public EntitySet<CTHoaDon> CTHoaDons
		{
			get
			{
				return this._CTHoaDons;
			}
			set
			{
				this._CTHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_KhachHang", ThisKey="maKH", OtherKey="maKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._maKH = value.maKH;
					}
					else
					{
						this._maKH = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_NhanVien", ThisKey="maNV", OtherKey="MANV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._maNV = value.MANV;
					}
					else
					{
						this._maNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHoaDons(CTHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_CTHoaDons(CTHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maKH;
		
		private string _tenKH;
		
		private string _sDT;
		
		private EntitySet<HoaDon> _HoaDons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKHChanging(string value);
    partial void OnmaKHChanged();
    partial void OntenKHChanging(string value);
    partial void OntenKHChanged();
    partial void OnsDTChanging(string value);
    partial void OnsDTChanged();
    #endregion
		
		public KhachHang()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKH", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maKH
		{
			get
			{
				return this._maKH;
			}
			set
			{
				if ((this._maKH != value))
				{
					this.OnmaKHChanging(value);
					this.SendPropertyChanging();
					this._maKH = value;
					this.SendPropertyChanged("maKH");
					this.OnmaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenKH", DbType="NVarChar(50)")]
		public string tenKH
		{
			get
			{
				return this._tenKH;
			}
			set
			{
				if ((this._tenKH != value))
				{
					this.OntenKHChanging(value);
					this.SendPropertyChanging();
					this._tenKH = value;
					this.SendPropertyChanged("tenKH");
					this.OntenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDT", DbType="VarChar(20)")]
		public string sDT
		{
			get
			{
				return this._sDT;
			}
			set
			{
				if ((this._sDT != value))
				{
					this.OnsDTChanging(value);
					this.SendPropertyChanging();
					this._sDT = value;
					this.SendPropertyChanged("sDT");
					this.OnsDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_HoaDons", ThisKey="maKH", OtherKey="maKH")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai")]
	public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maKM;
		
		private string _tenKM;
		
		private System.Nullable<int> _giamGia;
		
		private System.Nullable<int> _maSP;
		
		private EntitySet<CTKhuyenMai> _CTKhuyenMais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKMChanging(string value);
    partial void OnmaKMChanged();
    partial void OntenKMChanging(string value);
    partial void OntenKMChanged();
    partial void OngiamGiaChanging(System.Nullable<int> value);
    partial void OngiamGiaChanged();
    partial void OnmaSPChanging(System.Nullable<int> value);
    partial void OnmaSPChanged();
    #endregion
		
		public KhuyenMai()
		{
			this._CTKhuyenMais = new EntitySet<CTKhuyenMai>(new Action<CTKhuyenMai>(this.attach_CTKhuyenMais), new Action<CTKhuyenMai>(this.detach_CTKhuyenMais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKM", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maKM
		{
			get
			{
				return this._maKM;
			}
			set
			{
				if ((this._maKM != value))
				{
					this.OnmaKMChanging(value);
					this.SendPropertyChanging();
					this._maKM = value;
					this.SendPropertyChanged("maKM");
					this.OnmaKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenKM", DbType="NVarChar(50)")]
		public string tenKM
		{
			get
			{
				return this._tenKM;
			}
			set
			{
				if ((this._tenKM != value))
				{
					this.OntenKMChanging(value);
					this.SendPropertyChanging();
					this._tenKM = value;
					this.SendPropertyChanged("tenKM");
					this.OntenKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giamGia", DbType="Int")]
		public System.Nullable<int> giamGia
		{
			get
			{
				return this._giamGia;
			}
			set
			{
				if ((this._giamGia != value))
				{
					this.OngiamGiaChanging(value);
					this.SendPropertyChanging();
					this._giamGia = value;
					this.SendPropertyChanged("giamGia");
					this.OngiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSP", DbType="Int")]
		public System.Nullable<int> maSP
		{
			get
			{
				return this._maSP;
			}
			set
			{
				if ((this._maSP != value))
				{
					this.OnmaSPChanging(value);
					this.SendPropertyChanging();
					this._maSP = value;
					this.SendPropertyChanged("maSP");
					this.OnmaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_CTKhuyenMai", Storage="_CTKhuyenMais", ThisKey="maKM", OtherKey="maKM")]
		public EntitySet<CTKhuyenMai> CTKhuyenMais
		{
			get
			{
				return this._CTKhuyenMais;
			}
			set
			{
				this._CTKhuyenMais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTKhuyenMais(CTKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = this;
		}
		
		private void detach_CTKhuyenMais(CTKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCC")]
	public partial class NhaCC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maNCC;
		
		private string _tenNCC;
		
		private string _diaChi;
		
		private string _sDT;
		
		private string _ghiChu;
		
		private EntitySet<NhaCCCT> _NhaCCCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNCCChanging(string value);
    partial void OnmaNCCChanged();
    partial void OntenNCCChanging(string value);
    partial void OntenNCCChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    partial void OnsDTChanging(string value);
    partial void OnsDTChanged();
    partial void OnghiChuChanging(string value);
    partial void OnghiChuChanged();
    #endregion
		
		public NhaCC()
		{
			this._NhaCCCTs = new EntitySet<NhaCCCT>(new Action<NhaCCCT>(this.attach_NhaCCCTs), new Action<NhaCCCT>(this.detach_NhaCCCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNCC", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maNCC
		{
			get
			{
				return this._maNCC;
			}
			set
			{
				if ((this._maNCC != value))
				{
					this.OnmaNCCChanging(value);
					this.SendPropertyChanging();
					this._maNCC = value;
					this.SendPropertyChanged("maNCC");
					this.OnmaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNCC", DbType="NVarChar(50)")]
		public string tenNCC
		{
			get
			{
				return this._tenNCC;
			}
			set
			{
				if ((this._tenNCC != value))
				{
					this.OntenNCCChanging(value);
					this.SendPropertyChanging();
					this._tenNCC = value;
					this.SendPropertyChanged("tenNCC");
					this.OntenNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(100)")]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDT", DbType="VarChar(20)")]
		public string sDT
		{
			get
			{
				return this._sDT;
			}
			set
			{
				if ((this._sDT != value))
				{
					this.OnsDTChanging(value);
					this.SendPropertyChanging();
					this._sDT = value;
					this.SendPropertyChanged("sDT");
					this.OnsDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ghiChu", DbType="NVarChar(200)")]
		public string ghiChu
		{
			get
			{
				return this._ghiChu;
			}
			set
			{
				if ((this._ghiChu != value))
				{
					this.OnghiChuChanging(value);
					this.SendPropertyChanging();
					this._ghiChu = value;
					this.SendPropertyChanged("ghiChu");
					this.OnghiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCC_NhaCCCT", Storage="_NhaCCCTs", ThisKey="maNCC", OtherKey="maNCC")]
		public EntitySet<NhaCCCT> NhaCCCTs
		{
			get
			{
				return this._NhaCCCTs;
			}
			set
			{
				this._NhaCCCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhaCCCTs(NhaCCCT entity)
		{
			this.SendPropertyChanging();
			entity.NhaCC = this;
		}
		
		private void detach_NhaCCCTs(NhaCCCT entity)
		{
			this.SendPropertyChanging();
			entity.NhaCC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCCCT")]
	public partial class NhaCCCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maCTNCC;
		
		private string _maNCC;
		
		private int _maSP;
		
		private System.Nullable<System.DateTime> _ngayCC;
		
		private System.Nullable<int> _soLuong;
		
		private string _ghiChu;
		
		private EntityRef<NhaCC> _NhaCC;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaCTNCCChanging(int value);
    partial void OnmaCTNCCChanged();
    partial void OnmaNCCChanging(string value);
    partial void OnmaNCCChanged();
    partial void OnmaSPChanging(int value);
    partial void OnmaSPChanged();
    partial void OnngayCCChanging(System.Nullable<System.DateTime> value);
    partial void OnngayCCChanged();
    partial void OnsoLuongChanging(System.Nullable<int> value);
    partial void OnsoLuongChanged();
    partial void OnghiChuChanging(string value);
    partial void OnghiChuChanged();
    #endregion
		
		public NhaCCCT()
		{
			this._NhaCC = default(EntityRef<NhaCC>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maCTNCC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maCTNCC
		{
			get
			{
				return this._maCTNCC;
			}
			set
			{
				if ((this._maCTNCC != value))
				{
					this.OnmaCTNCCChanging(value);
					this.SendPropertyChanging();
					this._maCTNCC = value;
					this.SendPropertyChanged("maCTNCC");
					this.OnmaCTNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNCC", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maNCC
		{
			get
			{
				return this._maNCC;
			}
			set
			{
				if ((this._maNCC != value))
				{
					if (this._NhaCC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNCCChanging(value);
					this.SendPropertyChanging();
					this._maNCC = value;
					this.SendPropertyChanged("maNCC");
					this.OnmaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maSP
		{
			get
			{
				return this._maSP;
			}
			set
			{
				if ((this._maSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaSPChanging(value);
					this.SendPropertyChanging();
					this._maSP = value;
					this.SendPropertyChanged("maSP");
					this.OnmaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayCC", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngayCC
		{
			get
			{
				return this._ngayCC;
			}
			set
			{
				if ((this._ngayCC != value))
				{
					this.OnngayCCChanging(value);
					this.SendPropertyChanging();
					this._ngayCC = value;
					this.SendPropertyChanged("ngayCC");
					this.OnngayCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int")]
		public System.Nullable<int> soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ghiChu", DbType="NVarChar(200)")]
		public string ghiChu
		{
			get
			{
				return this._ghiChu;
			}
			set
			{
				if ((this._ghiChu != value))
				{
					this.OnghiChuChanging(value);
					this.SendPropertyChanging();
					this._ghiChu = value;
					this.SendPropertyChanged("ghiChu");
					this.OnghiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCC_NhaCCCT", Storage="_NhaCC", ThisKey="maNCC", OtherKey="maNCC", IsForeignKey=true)]
		public NhaCC NhaCC
		{
			get
			{
				return this._NhaCC.Entity;
			}
			set
			{
				NhaCC previousValue = this._NhaCC.Entity;
				if (((previousValue != value) 
							|| (this._NhaCC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCC.Entity = null;
						previousValue.NhaCCCTs.Remove(this);
					}
					this._NhaCC.Entity = value;
					if ((value != null))
					{
						value.NhaCCCTs.Add(this);
						this._maNCC = value.maNCC;
					}
					else
					{
						this._maNCC = default(string);
					}
					this.SendPropertyChanged("NhaCC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_NhaCCCT", Storage="_SanPham", ThisKey="maSP", OtherKey="maSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.NhaCCCTs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.NhaCCCTs.Add(this);
						this._maSP = value.maSP;
					}
					else
					{
						this._maSP = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _HOTENNV;
		
		private string _DIACHINV;
		
		private System.Nullable<int> _SDT;
		
		private System.DateTime _NGAYSINH;
		
		private string _CHUCVU;
		
		private string _maCN;
		
		private string _GIOITINH;
		
		private System.DateTime _CREATED_DATE_NV;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
		private EntityRef<ChiNhanh> _ChiNhanh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnHOTENNVChanging(string value);
    partial void OnHOTENNVChanged();
    partial void OnDIACHINVChanging(string value);
    partial void OnDIACHINVChanged();
    partial void OnSDTChanging(System.Nullable<int> value);
    partial void OnSDTChanged();
    partial void OnNGAYSINHChanging(System.DateTime value);
    partial void OnNGAYSINHChanged();
    partial void OnCHUCVUChanging(string value);
    partial void OnCHUCVUChanged();
    partial void OnmaCNChanging(string value);
    partial void OnmaCNChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnCREATED_DATE_NVChanging(System.DateTime value);
    partial void OnCREATED_DATE_NVChanged();
    #endregion
		
		public NhanVien()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			this._ChiNhanh = default(EntityRef<ChiNhanh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTENNV", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string HOTENNV
		{
			get
			{
				return this._HOTENNV;
			}
			set
			{
				if ((this._HOTENNV != value))
				{
					this.OnHOTENNVChanging(value);
					this.SendPropertyChanging();
					this._HOTENNV = value;
					this.SendPropertyChanged("HOTENNV");
					this.OnHOTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHINV", DbType="NVarChar(100)")]
		public string DIACHINV
		{
			get
			{
				return this._DIACHINV;
			}
			set
			{
				if ((this._DIACHINV != value))
				{
					this.OnDIACHINVChanging(value);
					this.SendPropertyChanging();
					this._DIACHINV = value;
					this.SendPropertyChanged("DIACHINV");
					this.OnDIACHINVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int")]
		public System.Nullable<int> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date NOT NULL")]
		public System.DateTime NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUCVU", DbType="NVarChar(50)")]
		public string CHUCVU
		{
			get
			{
				return this._CHUCVU;
			}
			set
			{
				if ((this._CHUCVU != value))
				{
					this.OnCHUCVUChanging(value);
					this.SendPropertyChanging();
					this._CHUCVU = value;
					this.SendPropertyChanged("CHUCVU");
					this.OnCHUCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maCN", DbType="VarChar(20)")]
		public string maCN
		{
			get
			{
				return this._maCN;
			}
			set
			{
				if ((this._maCN != value))
				{
					if (this._ChiNhanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaCNChanging(value);
					this.SendPropertyChanging();
					this._maCN = value;
					this.SendPropertyChanged("maCN");
					this.OnmaCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_DATE_NV", DbType="DateTime NOT NULL")]
		public System.DateTime CREATED_DATE_NV
		{
			get
			{
				return this._CREATED_DATE_NV;
			}
			set
			{
				if ((this._CREATED_DATE_NV != value))
				{
					this.OnCREATED_DATE_NVChanging(value);
					this.SendPropertyChanging();
					this._CREATED_DATE_NV = value;
					this.SendPropertyChanged("CREATED_DATE_NV");
					this.OnCREATED_DATE_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_HoaDons", ThisKey="MANV", OtherKey="maNV")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_TaiKhoan", ThisKey="MANV", OtherKey="maNV", IsUnique=true, IsForeignKey=false)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.NhanVien = null;
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.NhanVien = this;
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiNhanh_NhanVien", Storage="_ChiNhanh", ThisKey="maCN", OtherKey="maCN", IsForeignKey=true)]
		public ChiNhanh ChiNhanh
		{
			get
			{
				return this._ChiNhanh.Entity;
			}
			set
			{
				ChiNhanh previousValue = this._ChiNhanh.Entity;
				if (((previousValue != value) 
							|| (this._ChiNhanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiNhanh.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._ChiNhanh.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._maCN = value.maCN;
					}
					else
					{
						this._maCN = default(string);
					}
					this.SendPropertyChanged("ChiNhanh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maSP;
		
		private string _tenSP;
		
		private string _maNCC;
		
		private string _maTL;
		
		private System.Nullable<double> _giaSP;
		
		private System.Nullable<int> _maDV;
		
		private System.Nullable<int> _SLTonKho;
		
		private System.Nullable<int> _tangKem;
		
		private EntitySet<CTHoaDon> _CTHoaDons;
		
		private EntitySet<CTKhuyenMai> _CTKhuyenMais;
		
		private EntitySet<NhaCCCT> _NhaCCCTs;
		
		private EntityRef<DonVi> _DonVi;
		
		private EntityRef<TheLoai> _TheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaSPChanging(int value);
    partial void OnmaSPChanged();
    partial void OntenSPChanging(string value);
    partial void OntenSPChanged();
    partial void OnmaNCCChanging(string value);
    partial void OnmaNCCChanged();
    partial void OnmaTLChanging(string value);
    partial void OnmaTLChanged();
    partial void OngiaSPChanging(System.Nullable<double> value);
    partial void OngiaSPChanged();
    partial void OnmaDVChanging(System.Nullable<int> value);
    partial void OnmaDVChanged();
    partial void OnSLTonKhoChanging(System.Nullable<int> value);
    partial void OnSLTonKhoChanged();
    partial void OntangKemChanging(System.Nullable<int> value);
    partial void OntangKemChanged();
    #endregion
		
		public SanPham()
		{
			this._CTHoaDons = new EntitySet<CTHoaDon>(new Action<CTHoaDon>(this.attach_CTHoaDons), new Action<CTHoaDon>(this.detach_CTHoaDons));
			this._CTKhuyenMais = new EntitySet<CTKhuyenMai>(new Action<CTKhuyenMai>(this.attach_CTKhuyenMais), new Action<CTKhuyenMai>(this.detach_CTKhuyenMais));
			this._NhaCCCTs = new EntitySet<NhaCCCT>(new Action<NhaCCCT>(this.attach_NhaCCCTs), new Action<NhaCCCT>(this.detach_NhaCCCTs));
			this._DonVi = default(EntityRef<DonVi>);
			this._TheLoai = default(EntityRef<TheLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maSP
		{
			get
			{
				return this._maSP;
			}
			set
			{
				if ((this._maSP != value))
				{
					this.OnmaSPChanging(value);
					this.SendPropertyChanging();
					this._maSP = value;
					this.SendPropertyChanged("maSP");
					this.OnmaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenSP", DbType="NVarChar(50)")]
		public string tenSP
		{
			get
			{
				return this._tenSP;
			}
			set
			{
				if ((this._tenSP != value))
				{
					this.OntenSPChanging(value);
					this.SendPropertyChanging();
					this._tenSP = value;
					this.SendPropertyChanged("tenSP");
					this.OntenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNCC", DbType="VarChar(20)")]
		public string maNCC
		{
			get
			{
				return this._maNCC;
			}
			set
			{
				if ((this._maNCC != value))
				{
					this.OnmaNCCChanging(value);
					this.SendPropertyChanging();
					this._maNCC = value;
					this.SendPropertyChanged("maNCC");
					this.OnmaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maTL", DbType="VarChar(20)")]
		public string maTL
		{
			get
			{
				return this._maTL;
			}
			set
			{
				if ((this._maTL != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaTLChanging(value);
					this.SendPropertyChanging();
					this._maTL = value;
					this.SendPropertyChanged("maTL");
					this.OnmaTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giaSP", DbType="Float")]
		public System.Nullable<double> giaSP
		{
			get
			{
				return this._giaSP;
			}
			set
			{
				if ((this._giaSP != value))
				{
					this.OngiaSPChanging(value);
					this.SendPropertyChanging();
					this._giaSP = value;
					this.SendPropertyChanged("giaSP");
					this.OngiaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDV", DbType="Int")]
		public System.Nullable<int> maDV
		{
			get
			{
				return this._maDV;
			}
			set
			{
				if ((this._maDV != value))
				{
					if (this._DonVi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDVChanging(value);
					this.SendPropertyChanging();
					this._maDV = value;
					this.SendPropertyChanged("maDV");
					this.OnmaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLTonKho", DbType="Int")]
		public System.Nullable<int> SLTonKho
		{
			get
			{
				return this._SLTonKho;
			}
			set
			{
				if ((this._SLTonKho != value))
				{
					this.OnSLTonKhoChanging(value);
					this.SendPropertyChanging();
					this._SLTonKho = value;
					this.SendPropertyChanged("SLTonKho");
					this.OnSLTonKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tangKem", DbType="Int")]
		public System.Nullable<int> tangKem
		{
			get
			{
				return this._tangKem;
			}
			set
			{
				if ((this._tangKem != value))
				{
					this.OntangKemChanging(value);
					this.SendPropertyChanging();
					this._tangKem = value;
					this.SendPropertyChanged("tangKem");
					this.OntangKemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTHoaDon", Storage="_CTHoaDons", ThisKey="maSP", OtherKey="maSP")]
		public EntitySet<CTHoaDon> CTHoaDons
		{
			get
			{
				return this._CTHoaDons;
			}
			set
			{
				this._CTHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTKhuyenMai", Storage="_CTKhuyenMais", ThisKey="maSP", OtherKey="maSP")]
		public EntitySet<CTKhuyenMai> CTKhuyenMais
		{
			get
			{
				return this._CTKhuyenMais;
			}
			set
			{
				this._CTKhuyenMais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_NhaCCCT", Storage="_NhaCCCTs", ThisKey="maSP", OtherKey="maSP")]
		public EntitySet<NhaCCCT> NhaCCCTs
		{
			get
			{
				return this._NhaCCCTs;
			}
			set
			{
				this._NhaCCCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonVi_SanPham", Storage="_DonVi", ThisKey="maDV", OtherKey="maDV", IsForeignKey=true)]
		public DonVi DonVi
		{
			get
			{
				return this._DonVi.Entity;
			}
			set
			{
				DonVi previousValue = this._DonVi.Entity;
				if (((previousValue != value) 
							|| (this._DonVi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonVi.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._DonVi.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._maDV = value.maDV;
					}
					else
					{
						this._maDV = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonVi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_SanPham", Storage="_TheLoai", ThisKey="maTL", OtherKey="maTL", IsForeignKey=true)]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._maTL = value.maTL;
					}
					else
					{
						this._maTL = default(string);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHoaDons(CTHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_CTHoaDons(CTHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_CTKhuyenMais(CTKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_CTKhuyenMais(CTKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_NhaCCCTs(NhaCCCT entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_NhaCCCTs(NhaCCCT entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maNV;
		
		private string _TKhoan;
		
		private string _MKhau;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNVChanging(string value);
    partial void OnmaNVChanged();
    partial void OnTKhoanChanging(string value);
    partial void OnTKhoanChanged();
    partial void OnMKhauChanging(string value);
    partial void OnMKhauChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNV", DbType="Char(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maNV
		{
			get
			{
				return this._maNV;
			}
			set
			{
				if ((this._maNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNVChanging(value);
					this.SendPropertyChanging();
					this._maNV = value;
					this.SendPropertyChanged("maNV");
					this.OnmaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKhoan", DbType="NVarChar(50)")]
		public string TKhoan
		{
			get
			{
				return this._TKhoan;
			}
			set
			{
				if ((this._TKhoan != value))
				{
					this.OnTKhoanChanging(value);
					this.SendPropertyChanging();
					this._TKhoan = value;
					this.SendPropertyChanged("TKhoan");
					this.OnTKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MKhau", DbType="NVarChar(50)")]
		public string MKhau
		{
			get
			{
				return this._MKhau;
			}
			set
			{
				if ((this._MKhau != value))
				{
					this.OnMKhauChanging(value);
					this.SendPropertyChanging();
					this._MKhau = value;
					this.SendPropertyChanged("MKhau");
					this.OnMKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_NhanVien", ThisKey="maNV", OtherKey="MANV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.TaiKhoan = null;
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.TaiKhoan = this;
						this._maNV = value.MANV;
					}
					else
					{
						this._maNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheLoai")]
	public partial class TheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maTL;
		
		private string _tenTL;
		
		private string _maDM;
		
		private string _ghiChu;
		
		private EntitySet<SanPham> _SanPhams;
		
		private EntityRef<DanhMuc> _DanhMuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaTLChanging(string value);
    partial void OnmaTLChanged();
    partial void OntenTLChanging(string value);
    partial void OntenTLChanged();
    partial void OnmaDMChanging(string value);
    partial void OnmaDMChanged();
    partial void OnghiChuChanging(string value);
    partial void OnghiChuChanged();
    #endregion
		
		public TheLoai()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			this._DanhMuc = default(EntityRef<DanhMuc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maTL", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maTL
		{
			get
			{
				return this._maTL;
			}
			set
			{
				if ((this._maTL != value))
				{
					this.OnmaTLChanging(value);
					this.SendPropertyChanging();
					this._maTL = value;
					this.SendPropertyChanged("maTL");
					this.OnmaTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenTL", DbType="NVarChar(50)")]
		public string tenTL
		{
			get
			{
				return this._tenTL;
			}
			set
			{
				if ((this._tenTL != value))
				{
					this.OntenTLChanging(value);
					this.SendPropertyChanging();
					this._tenTL = value;
					this.SendPropertyChanged("tenTL");
					this.OntenTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDM", DbType="VarChar(10)")]
		public string maDM
		{
			get
			{
				return this._maDM;
			}
			set
			{
				if ((this._maDM != value))
				{
					if (this._DanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDMChanging(value);
					this.SendPropertyChanging();
					this._maDM = value;
					this.SendPropertyChanged("maDM");
					this.OnmaDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ghiChu", DbType="NVarChar(200)")]
		public string ghiChu
		{
			get
			{
				return this._ghiChu;
			}
			set
			{
				if ((this._ghiChu != value))
				{
					this.OnghiChuChanging(value);
					this.SendPropertyChanging();
					this._ghiChu = value;
					this.SendPropertyChanged("ghiChu");
					this.OnghiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_SanPham", Storage="_SanPhams", ThisKey="maTL", OtherKey="maTL")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_TheLoai", Storage="_DanhMuc", ThisKey="maDM", OtherKey="maDM", IsForeignKey=true)]
		public DanhMuc DanhMuc
		{
			get
			{
				return this._DanhMuc.Entity;
			}
			set
			{
				DanhMuc previousValue = this._DanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc.Entity = null;
						previousValue.TheLoais.Remove(this);
					}
					this._DanhMuc.Entity = value;
					if ((value != null))
					{
						value.TheLoais.Add(this);
						this._maDM = value.maDM;
					}
					else
					{
						this._maDM = default(string);
					}
					this.SendPropertyChanged("DanhMuc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
	}
}
#pragma warning restore 1591
